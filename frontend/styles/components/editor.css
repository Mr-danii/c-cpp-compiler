/*
 * editor.css
 * Styles for the CodeMirror editor and related components
 */

/* Base CodeMirror container */

@import "codemirror/lib/codemirror.css";
@import "codemirror/addon/fold/foldgutter.css";

.CodeMirror {
  height: 100%;
  border-radius: var(--radius-sm);
  font-size: var(--font-sm);
  font-family: var(--font-mono);
  overflow-y: hidden;
  transition: font-size var(--transition-fast);
}

.zen-mode-active {
  overflow: hidden;
}

.zen-mode-active .CodeMirror {
  position: fixed;
  inset: 0;
  height: 100vh;
  width: 100vw;
  z-index: 9000;
  border-radius: 0;
  padding: var(--spacing-md);
}

.zen-mode-active .header,
.zen-mode-active .panel-header,
.zen-mode-active .button-container,
.zen-mode-active #vim-status {
  display: none !important;
}

.CodeMirror-focused .CodeMirror-cursor {
  border-left-color: var(--accent);
  box-shadow: 0 0 3px var(--accent);
}

/* Cursor style for Vim mode */
.cm-fat-cursor .CodeMirror-cursor,
.cm-animate-fat-cursor {
  background-color: var(--accent);
  opacity: 0.7;
  border: none;
  width: 0.55em;
}

/* Text selection and active line */
.CodeMirror-selected,
.CodeMirror-activeline-background {
  background-color: rgba(var(--accent-rgb), 0.2) !important;
}

/* Code folding */

.CodeMirror-foldmarker {
  color: var(--accent);
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.5);
  font-family: Arial, sans-serif;
  font-size: 0.9em;
  padding: 0 4px;
  border-radius: var(--radius-sm);
  background-color: rgba(var(--accent-rgb), 0.2);
  cursor: pointer;
  box-shadow: var(--shadow-accent-sm);
  transition: all var(--transition-fast);
}

.CodeMirror-foldmarker:hover {
  background-color: rgba(var(--accent-rgb), 0.3);
  transform: translateY(-1px);
  box-shadow: var(--shadow-accent-md);
}

/* Bracket matching */
.CodeMirror-matchingbracket,
.CodeMirror-nonmatchingbracket {
  font-weight: bold;
  border-radius: var(--radius-sm);
  padding: 1px 2px;
  text-decoration: none;
  transition: all var(--transition-fast);
}

.CodeMirror-matchingbracket {
  color: var(--accent) !important;
  background-color: rgba(var(--accent-rgb), 0.15);
  box-shadow: 0 0 0 1px rgba(var(--accent-rgb), 0.4);
  animation: bracket-glow 1.5s infinite alternate;
  text-shadow: 0 0 3px rgba(var(--accent-rgb), 0.4);
}

.CodeMirror-nonmatchingbracket {
  color: var(--error) !important;
  background-color: rgba(var(--error-rgb), 0.15);
  box-shadow: 0 0 0 1px rgba(var(--error-rgb), 0.4);
  animation: error-pulse 1s infinite;
  text-shadow: 0 0 3px rgba(var(--error-rgb), 0.4);
}

@keyframes bracket-glow {
  from {
    background-color: rgba(var(--accent-rgb), 0.1);
    box-shadow: 0 0 0 1px rgba(var(--accent-rgb), 0.4),
      0 0 5px rgba(var(--accent-rgb), 0.2);
    text-shadow: 0 0 3px rgba(var(--accent-rgb), 0.3);
  }
  to {
    background-color: rgba(var(--accent-rgb), 0.25);
    box-shadow: 0 0 0 1px rgba(var(--accent-rgb), 0.7),
      0 0 10px rgba(var(--accent-rgb), 0.5);
    text-shadow: 0 0 5px rgba(var(--accent-rgb), 0.6);
  }
}

@keyframes error-pulse {
  0%,
  100% {
    background-color: rgba(var(--error-rgb), 0.15);
    box-shadow: 0 0 0 1px rgba(var(--error-rgb), 0.4),
      0 0 5px rgba(var(--error-rgb), 0.2);
    text-shadow: 0 0 3px rgba(var(--error-rgb), 0.3);
  }
  50% {
    background-color: rgba(var(--error-rgb), 0.3);
    box-shadow: 0 0 0 1px rgba(var(--error-rgb), 0.7),
      0 0 10px rgba(var(--error-rgb), 0.5);
    text-shadow: 0 0 5px rgba(var(--error-rgb), 0.6);
  }
}
